import{_ as t,c as a,o as c,ae as o}from"./chunks/framework.B2UkztZl.js";const s="/vitepress-study/assets/hexschoolReact1-1-1-1.BFubtmu4.png",r="/vitepress-study/assets/hexschoolReact1-1-1-2.QQAfwLDX.png",d="/vitepress-study/assets/hexschoolReact1-1-1-3.CjvZcrzO.png",l="/vitepress-study/assets/hexschoolReact1-1-1-4.BGljDiev.png",i="/vitepress-study/assets/hexschoolReact1-1-1-5.6VsxPnqw.png",h="/vitepress-study/assets/hexschoolReact1-1-1-6.sDLAqJbn.png",g=JSON.parse('{"title":"React 實戰影音課 1","description":"","frontmatter":{"title":"React 實戰影音課 1"},"headers":[],"relativePath":"pages/f2e/docReact/react/1/hexschoolReact1-1-1.md","filePath":"pages/f2e/docReact/react/1/hexschoolReact1-1-1.md"}'),p={name:"pages/f2e/docReact/react/1/hexschoolReact1-1-1.md"};function n(_,e,m,R,u,x){return c(),a("div",null,e[0]||(e[0]=[o('<h1 id="_1-課程介紹" tabindex="-1">1. 課程介紹 <a class="header-anchor" href="#_1-課程介紹" aria-label="Permalink to &quot;1. 課程介紹&quot;">​</a></h1><h2 id="單元資源" tabindex="-1">單元資源 <a class="header-anchor" href="#單元資源" aria-label="Permalink to &quot;單元資源&quot;">​</a></h2><ul><li><a href="https://github.com/hexschool/react-starter-files" target="_blank" rel="noreferrer">React 課程講義</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer" target="_blank" rel="noreferrer">VSCode 延伸套件 - Live Server</a></li></ul><h2 id="react-框架做什麼" tabindex="-1">React 框架做什麼？ <a class="header-anchor" href="#react-框架做什麼" aria-label="Permalink to &quot;React 框架做什麼？&quot;">​</a></h2><p>近幾年有三大框架分別是 <code>Vue</code>、<code>React</code> 以及 <code>Angular</code>，他們都致力於解決幾項問題 <img src="'+s+'" alt="hexschoolReact1-1-1-1"></p><h2 id="關注點分離" tabindex="-1">關注點分離 <a class="header-anchor" href="#關注點分離" aria-label="Permalink to &quot;關注點分離&quot;">​</a></h2><p>以 <code>React</code> 來說，資料就會統一交由 <code>JavaScript</code> 來進行管理，而畫面就會交由 <code>JSX</code> 來進行處理，讓多人開發也可以確保彼此開發的行為是一致的， <img src="'+r+'" alt="hexschoolReact1-1-1-2"></p><p>除此之外 隨著應用程式越來越大，畫面上許多區塊的複用性會越來越高，如果沒有適當的元件化，專案中將會有大量重複的程式碼，在 <code>React</code> 中都會是以元件的方式來進行開發，因此畫面上有許多區塊都是可以重複的利用。 <img src="'+d+'" alt="hexschoolReact1-1-1-3"></p><p>除此之外 <code>React</code> 在網路上還有許多資源可以使用，這些資源大多都是以元件的方式提供，讓開發者不需要重複的造輪子，而是透過這些資源做到更好的效果 <img src="'+l+'" alt="hexschoolReact1-1-1-4"></p><p>而前面也有提到，我們會使用更簡單的方式來處理 <code>JS</code> 跟 <code>HTML</code> 的關係，在 <code>React</code> 中 我們會使用 <code>JSX</code> 的語法來進行處理，它的寫法大多都是與 <code>HTML</code> 是相近的 只有少部分的不同，課程也將會從 <code>JSX</code> 作為開始 讓大家更快上手 <code>React</code> 的觀念。 <img src="'+i+'" alt="hexschoolReact1-1-1-5"></p><p><img src="'+h+'" alt="hexschoolReact1-1-1-6"></p>',11)]))}const v=t(p,[["render",n]]);export{g as __pageData,v as default};
