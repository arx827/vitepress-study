import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.B2UkztZl.js";const n="/vitepress-study/assets/hexschoolReact1-1-3-1.DdGsqfMW.png",l="/vitepress-study/assets/hexschoolReact1-1-3-2.BTOXlWSh.png",h="/vitepress-study/assets/hexschoolReact1-1-3-3.CmDEnWZx.png",p="/vitepress-study/assets/hexschoolReact1-1-3-4.Dd5UUwAU.png",b=JSON.parse('{"title":"React 實戰影音課 1","description":"","frontmatter":{"title":"React 實戰影音課 1"},"headers":[],"relativePath":"pages/f2e/docReact/react/1/hexschoolReact1-1-3.md","filePath":"pages/f2e/docReact/react/1/hexschoolReact1-1-3.md"}'),r={name:"pages/f2e/docReact/react/1/hexschoolReact1-1-3.md"};function c(d,s,k,o,E,g){return e(),i("div",null,s[0]||(s[0]=[t('<h1 id="_3-建立-react-環境" tabindex="-1">3. 建立 React 環境 <a class="header-anchor" href="#_3-建立-react-環境" aria-label="Permalink to &quot;3. 建立 React 環境&quot;">​</a></h1><h2 id="打開檔案-intro-createapp-html" tabindex="-1">打開檔案 <code>/intro/createApp.html</code> <a class="header-anchor" href="#打開檔案-intro-createapp-html" aria-label="Permalink to &quot;打開檔案 `/intro/createApp.html`&quot;">​</a></h2><p><img src="'+n+'" alt="hexschoolReact1-1-3-1"></p><h2 id="如何在環境中加入-react" tabindex="-1">如何在環境中加入 <code>React</code> <a class="header-anchor" href="#如何在環境中加入-react" aria-label="Permalink to &quot;如何在環境中加入 `React`&quot;">​</a></h2><h3 id="步驟一-載入-react、babel" tabindex="-1">步驟一：載入 React、Babel <a class="header-anchor" href="#步驟一-載入-react、babel" aria-label="Permalink to &quot;步驟一：載入 React、Babel&quot;">​</a></h3><ul><li><a href="https://reactjs.org/docs/cdn-links.html#gatsby-focus-wrapper" target="_blank" rel="noreferrer">CDN網址</a></li></ul><p>上方為開發模式，下方為正式模式， <img src="'+l+`" alt="hexschoolReact1-1-3-2"></p><p>這兩行分別代表，</p><ul><li>一個是 <code>React</code> 本身的函式庫，</li><li>一個是 <code>React DOM</code>，是指 <code>JS</code> 在操作 <code>HTML</code> 的一個物件結構。</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossorigin </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/react@18/umd/react.development.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossorigin </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/react-dom@18/umd/react-dom.development.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>必須要有這兩行，才能在專案中運行 <code>React</code>，將這兩行加入程式碼中。</li><li>接著將 <code>babel</code> 貼到專案中，<code>babel</code> 可以讓 <code>JS</code> 撰寫不同風格。</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/babel-standalone@6/babel.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+h+'" alt="hexschoolReact1-1-3-3"></p><p>接著，為了讓 <code>babel</code> 能夠運行，必須在 <code>&lt;script&gt;</code> 中加入 <code>type=&quot;text/babel&quot;</code><img src="'+p+`" alt="hexschoolReact1-1-3-4"></p><h3 id="步驟二-檢查資源是否有正確載入" tabindex="-1">步驟二：檢查資源是否有正確載入 <a class="header-anchor" href="#步驟二-檢查資源是否有正確載入" aria-label="Permalink to &quot;步驟二：檢查資源是否有正確載入&quot;">​</a></h3><p>加入 <code>console</code> 查看 <code>React</code> 及 <code>ReactDOM</code> 是否有正確印出資訊</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text/babel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.log(React, ReactDOM);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="步驟三-加入-root-元素" tabindex="-1">步驟三：加入 <code>root</code> 元素 <a class="header-anchor" href="#步驟三-加入-root-元素" aria-label="Permalink to &quot;步驟三：加入 \`root\` 元素&quot;">​</a></h3><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>接下來所生成的 <code>React</code> 元素都會加載在這個地方，在 <code>root</code> 元素裡面。</p><h3 id="步驟四-建立-react-元件" tabindex="-1">步驟四：建立 <code>React</code> 元件 <a class="header-anchor" href="#步驟四-建立-react-元件" aria-label="Permalink to &quot;步驟四：建立 \`React\` 元件&quot;">​</a></h3><p>可以使用 <code>function</code> 來建立，首字必須大寫。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;React我來了&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="步驟五-渲染元件至根元件上" tabindex="-1">步驟五：渲染元件至根元件上 <a class="header-anchor" href="#步驟五-渲染元件至根元件上" aria-label="Permalink to &quot;步驟五：渲染元件至根元件上&quot;">​</a></h3><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> el</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> root</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ReactDOM.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">root.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,25)]))}const m=a(r,[["render",c]]);export{b as __pageData,m as default};
