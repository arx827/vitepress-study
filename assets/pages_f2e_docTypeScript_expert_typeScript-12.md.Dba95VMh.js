import{_ as a,c as t,o as r,ae as i}from"./chunks/framework.B2UkztZl.js";const _=JSON.parse('{"title":"TypeSctipt 邁向專家之路","description":"","frontmatter":{"title":"TypeSctipt 邁向專家之路"},"headers":[],"relativePath":"pages/f2e/docTypeScript/expert/typeScript-12.md","filePath":"pages/f2e/docTypeScript/expert/typeScript-12.md"}'),c={name:"pages/f2e/docTypeScript/expert/typeScript-12.md"};function o(p,e,l,s,h,n){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="第二篇-typescript-徹底解析" tabindex="-1">第二篇 TypeScript 徹底解析 <a class="header-anchor" href="#第二篇-typescript-徹底解析" aria-label="Permalink to &quot;第二篇 TypeScript 徹底解析&quot;">​</a></h1><hr><h1 id="_12-在-typescript-使用泛型" tabindex="-1">12 在 TypeScript 使用泛型 <a class="header-anchor" href="#_12-在-typescript-使用泛型" aria-label="Permalink to &quot;12 在 TypeScript 使用泛型&quot;">​</a></h1><h2 id="_12-1-本章行前準備" tabindex="-1">12-1 本章行前準備 <a class="header-anchor" href="#_12-1-本章行前準備" aria-label="Permalink to &quot;12-1 本章行前準備&quot;">​</a></h2><h2 id="_12-2-為什麼需要使用泛型" tabindex="-1">12-2 為什麼需要使用泛型？ <a class="header-anchor" href="#_12-2-為什麼需要使用泛型" aria-label="Permalink to &quot;12-2 為什麼需要使用泛型？&quot;">​</a></h2><h2 id="_12-3-泛型類別-generic-class" tabindex="-1">12-3 泛型類別 (generic class) <a class="header-anchor" href="#_12-3-泛型類別-generic-class" aria-label="Permalink to &quot;12-3 泛型類別 (generic class)&quot;">​</a></h2><h2 id="_12-4-泛型類別的繼承" tabindex="-1">12-4 泛型類別的繼承 <a class="header-anchor" href="#_12-4-泛型類別的繼承" aria-label="Permalink to &quot;12-4 泛型類別的繼承&quot;">​</a></h2><h2 id="_12-5-泛型類別的其他操作" tabindex="-1">12-5 泛型類別的其他操作 <a class="header-anchor" href="#_12-5-泛型類別的其他操作" aria-label="Permalink to &quot;12-5 泛型類別的其他操作&quot;">​</a></h2><h2 id="_12-6-泛型介面" tabindex="-1">12-6 泛型介面 <a class="header-anchor" href="#_12-6-泛型介面" aria-label="Permalink to &quot;12-6 泛型介面&quot;">​</a></h2><h2 id="_12-7-本章總結" tabindex="-1">12-7 本章總結 <a class="header-anchor" href="#_12-7-本章總結" aria-label="Permalink to &quot;12-7 本章總結&quot;">​</a></h2>',10)]))}const u=a(c,[["render",o]]);export{_ as __pageData,u as default};
