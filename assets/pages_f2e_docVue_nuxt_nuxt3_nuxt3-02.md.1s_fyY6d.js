import{_ as a,c as r,o as i,ae as o}from"./chunks/framework.B2UkztZl.js";const p=JSON.parse('{"title":"Nuxt3 學習筆記 - Ryan","description":"","frontmatter":{"title":"Nuxt3 學習筆記 - Ryan"},"headers":[],"relativePath":"pages/f2e/docVue/nuxt/nuxt3/nuxt3-02.md","filePath":"pages/f2e/docVue/nuxt/nuxt3/nuxt3-02.md"}'),t={name:"pages/f2e/docVue/nuxt/nuxt3/nuxt3-02.md"};function n(d,e,l,c,s,u){return i(),r("div",null,e[0]||(e[0]=[o('<h1 id="_2-nuxt-3-介紹" tabindex="-1">2. Nuxt 3 介紹 <a class="header-anchor" href="#_2-nuxt-3-介紹" aria-label="Permalink to &quot;2. Nuxt 3 介紹&quot;">​</a></h1><h2 id="isomorphic-javascript-與-universal-javascript" tabindex="-1">Isomorphic JavaScript 與 Universal JavaScript <a class="header-anchor" href="#isomorphic-javascript-與-universal-javascript" aria-label="Permalink to &quot;Isomorphic JavaScript 與 Universal JavaScript&quot;">​</a></h2><p><code>Nuxt 3</code> 是一個 <code>Isomorphic JavaScript</code> 框架。</p><ul><li><h3 id="isomorphic-同構-javascript" tabindex="-1">Isomorphic (同構) JavaScript <a class="header-anchor" href="#isomorphic-同構-javascript" aria-label="Permalink to &quot;Isomorphic (同構) JavaScript&quot;">​</a></h3><p>同樣的 <code>JavaScript</code> 程式碼可以在客戶端及伺服器端運行，也就是說 <code>同一份</code> Code 除了能在前端瀏覽器也能在後端執行。</p></li><li><h3 id="universal-javascript" tabindex="-1">Universal JavaScript <a class="header-anchor" href="#universal-javascript" aria-label="Permalink to &quot;Universal JavaScript&quot;">​</a></h3><p>同樣的 <code>JavaScript</code> 程式碼可以在不同的環境執行，也就是不僅可以在前後端執行，還可以在本機設備和嵌入式架構上運行。</p></li></ul><h2 id="nitro" tabindex="-1">Nitro <a class="header-anchor" href="#nitro" aria-label="Permalink to &quot;Nitro&quot;">​</a></h2><p>Nuxt 3 由一個全新的伺服器引擎 <a href="https://nuxt.com/docs/guide/concepts/server-engine" target="_blank" rel="noreferrer">Nitro</a> 提供支持，</p><p>它具有以下幾個特點：</p><ul><li>跨平台支持，支持 <code>Node.js</code> 與瀏覽器等</li><li><code>Serverless</code> 支持</li><li><code>API</code> 路由，使用 <a href="https://github.com/h3js/h3" target="_blank" rel="noreferrer">unjs/h3</a></li><li><code>自動程式碼拆分 (code-splitting)</code> 與 <code>異步加載 chunk (async-loaded chunks)</code></li><li>混合渲染模式，供 <code>靜態 (static)</code> 與 <code>無伺服器 (serverless)</code> 網站</li><li>開發伺服器上的 <code>HMR (hot module reloading)</code></li></ul><h2 id="nuxt-3-渲染模式" tabindex="-1">Nuxt 3 渲染模式 <a class="header-anchor" href="#nuxt-3-渲染模式" aria-label="Permalink to &quot;Nuxt 3 渲染模式&quot;">​</a></h2><ul><li><h3 id="client-side-only-rendering" tabindex="-1">Client-side Only Rendering <a class="header-anchor" href="#client-side-only-rendering" aria-label="Permalink to &quot;Client-side Only Rendering&quot;">​</a></h3><p>也就是客戶端渲染 <code>CSR</code></p></li><li><h3 id="universal-rendering" tabindex="-1">Universal Rendering <a class="header-anchor" href="#universal-rendering" aria-label="Permalink to &quot;Universal Rendering&quot;">​</a></h3><p>是 <code>Nuxt 3</code> 預設的渲染模式，等於 <code>SSR + SPA</code>。</p></li><li><h3 id="hybrid-rendering-混合渲染" tabindex="-1">Hybrid Rendering 混合渲染 <a class="header-anchor" href="#hybrid-rendering-混合渲染" aria-label="Permalink to &quot;Hybrid Rendering 混合渲染&quot;">​</a></h3><p>可以為每個路由設置不同的渲染與緩存規則，讓部分頁面是 <code>CSR</code>，另一部份是 <code>SSR</code>。</p></li><li><h3 id="edge-side-rendering-邊緣渲染" tabindex="-1">Edge-Side Rendering 邊緣渲染 <a class="header-anchor" href="#edge-side-rendering-邊緣渲染" aria-label="Permalink to &quot;Edge-Side Rendering 邊緣渲染&quot;">​</a></h3><p><code>Nitro</code> 為 <code>Nuxt 3</code> 提供支持的全新伺服器端渲染引擎，能為 <code>Node.js</code>、<code>Deno</code>、<code>Worker</code> 等提供跨平台的支持， 讓 <code>Nuxt</code> 可以在 <code>CDN Edge Workers</code> 進行渲染。</p><blockquote><p>能有效分擔在伺服器端渲染時的資源負荷，將其提升到另一個層次，從而減少網路延遲及成本。</p></blockquote></li></ul><h2 id="nuxt-3-的建構工具" tabindex="-1">Nuxt 3 的建構工具 <a class="header-anchor" href="#nuxt-3-的建構工具" aria-label="Permalink to &quot;Nuxt 3 的建構工具&quot;">​</a></h2><ul><li><a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite</a> (預設) / <a href="https://webpack.js.org/" target="_blank" rel="noreferrer">webpack</a></li><li><a href="https://rollupjs.org/" target="_blank" rel="noreferrer">Rollup</a></li><li><a href="https://postcss.org/" target="_blank" rel="noreferrer">PostCSS</a></li><li><a href="https://esbuild.github.io/" target="_blank" rel="noreferrer">esbuild</a></li></ul><blockquote><p><code>Nuxt 3</code> 已經配置好一堆設定，要調整配置，可以在 <code>nuxt.config</code> 中進行調整。</p></blockquote>',13)]))}const x=a(t,[["render",n]]);export{p as __pageData,x as default};
